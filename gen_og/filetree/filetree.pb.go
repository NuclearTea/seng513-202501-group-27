// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.19.6
// source: filetree.proto

package filetree

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type File struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Content       string                 `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	Id            string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Path          []string               `protobuf:"bytes,4,rep,name=path,proto3" json:"path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *File) Reset() {
	*x = File{}
	mi := &file_filetree_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *File) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*File) ProtoMessage() {}

func (x *File) ProtoReflect() protoreflect.Message {
	mi := &file_filetree_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use File.ProtoReflect.Descriptor instead.
func (*File) Descriptor() ([]byte, []int) {
	return file_filetree_proto_rawDescGZIP(), []int{0}
}

func (x *File) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *File) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *File) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *File) GetPath() []string {
	if x != nil {
		return x.Path
	}
	return nil
}

type Directory struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Path          []string               `protobuf:"bytes,2,rep,name=path,proto3" json:"path,omitempty"`
	FileChildren  []*File                `protobuf:"bytes,3,rep,name=file_children,json=fileChildren,proto3" json:"file_children,omitempty"`
	DirChildren   []*Directory           `protobuf:"bytes,4,rep,name=dir_children,json=dirChildren,proto3" json:"dir_children,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Directory) Reset() {
	*x = Directory{}
	mi := &file_filetree_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Directory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Directory) ProtoMessage() {}

func (x *Directory) ProtoReflect() protoreflect.Message {
	mi := &file_filetree_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Directory.ProtoReflect.Descriptor instead.
func (*Directory) Descriptor() ([]byte, []int) {
	return file_filetree_proto_rawDescGZIP(), []int{1}
}

func (x *Directory) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Directory) GetPath() []string {
	if x != nil {
		return x.Path
	}
	return nil
}

func (x *Directory) GetFileChildren() []*File {
	if x != nil {
		return x.FileChildren
	}
	return nil
}

func (x *Directory) GetDirChildren() []*Directory {
	if x != nil {
		return x.DirChildren
	}
	return nil
}

type UploadRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Root          *Directory             `protobuf:"bytes,1,opt,name=root,proto3" json:"root,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadRequest) Reset() {
	*x = UploadRequest{}
	mi := &file_filetree_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadRequest) ProtoMessage() {}

func (x *UploadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_filetree_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadRequest.ProtoReflect.Descriptor instead.
func (*UploadRequest) Descriptor() ([]byte, []int) {
	return file_filetree_proto_rawDescGZIP(), []int{2}
}

func (x *UploadRequest) GetRoot() *Directory {
	if x != nil {
		return x.Root
	}
	return nil
}

type UploadResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadResponse) Reset() {
	*x = UploadResponse{}
	mi := &file_filetree_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadResponse) ProtoMessage() {}

func (x *UploadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_filetree_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadResponse.ProtoReflect.Descriptor instead.
func (*UploadResponse) Descriptor() ([]byte, []int) {
	return file_filetree_proto_rawDescGZIP(), []int{3}
}

func (x *UploadResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

var File_filetree_proto protoreflect.FileDescriptor

const file_filetree_proto_rawDesc = "" +
	"\n" +
	"\x0efiletree.proto\x12\bfiletree\"X\n" +
	"\x04File\x12\x18\n" +
	"\acontent\x18\x01 \x01(\tR\acontent\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12\x12\n" +
	"\x04path\x18\x04 \x03(\tR\x04path\"\xa0\x01\n" +
	"\tDirectory\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04path\x18\x02 \x03(\tR\x04path\x123\n" +
	"\rfile_children\x18\x03 \x03(\v2\x0e.filetree.FileR\ffileChildren\x126\n" +
	"\fdir_children\x18\x04 \x03(\v2\x13.filetree.DirectoryR\vdirChildren\"8\n" +
	"\rUploadRequest\x12'\n" +
	"\x04root\x18\x01 \x01(\v2\x13.filetree.DirectoryR\x04root\"(\n" +
	"\x0eUploadResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status2J\n" +
	"\vFileService\x12;\n" +
	"\x06Upload\x12\x17.filetree.UploadRequest\x1a\x18.filetree.UploadResponseB\x15Z\x13./filetree;filetreeb\x06proto3"

var (
	file_filetree_proto_rawDescOnce sync.Once
	file_filetree_proto_rawDescData []byte
)

func file_filetree_proto_rawDescGZIP() []byte {
	file_filetree_proto_rawDescOnce.Do(func() {
		file_filetree_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_filetree_proto_rawDesc), len(file_filetree_proto_rawDesc)))
	})
	return file_filetree_proto_rawDescData
}

var file_filetree_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_filetree_proto_goTypes = []any{
	(*File)(nil),           // 0: filetree.File
	(*Directory)(nil),      // 1: filetree.Directory
	(*UploadRequest)(nil),  // 2: filetree.UploadRequest
	(*UploadResponse)(nil), // 3: filetree.UploadResponse
}
var file_filetree_proto_depIdxs = []int32{
	0, // 0: filetree.Directory.file_children:type_name -> filetree.File
	1, // 1: filetree.Directory.dir_children:type_name -> filetree.Directory
	1, // 2: filetree.UploadRequest.root:type_name -> filetree.Directory
	2, // 3: filetree.FileService.Upload:input_type -> filetree.UploadRequest
	3, // 4: filetree.FileService.Upload:output_type -> filetree.UploadResponse
	4, // [4:5] is the sub-list for method output_type
	3, // [3:4] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_filetree_proto_init() }
func file_filetree_proto_init() {
	if File_filetree_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_filetree_proto_rawDesc), len(file_filetree_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_filetree_proto_goTypes,
		DependencyIndexes: file_filetree_proto_depIdxs,
		MessageInfos:      file_filetree_proto_msgTypes,
	}.Build()
	File_filetree_proto = out.File
	file_filetree_proto_goTypes = nil
	file_filetree_proto_depIdxs = nil
}
