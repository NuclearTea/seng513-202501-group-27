// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.19.6
// source: dockerLogs.proto

package dockerLogs

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DockerLogRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContainerId   string                 `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"` // Or use container name
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DockerLogRequest) Reset() {
	*x = DockerLogRequest{}
	mi := &file_dockerLogs_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DockerLogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DockerLogRequest) ProtoMessage() {}

func (x *DockerLogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dockerLogs_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DockerLogRequest.ProtoReflect.Descriptor instead.
func (*DockerLogRequest) Descriptor() ([]byte, []int) {
	return file_dockerLogs_proto_rawDescGZIP(), []int{0}
}

func (x *DockerLogRequest) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

type DockerLogEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Timestamp     string                 `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"` // optional ISO 8601 format
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DockerLogEntry) Reset() {
	*x = DockerLogEntry{}
	mi := &file_dockerLogs_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DockerLogEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DockerLogEntry) ProtoMessage() {}

func (x *DockerLogEntry) ProtoReflect() protoreflect.Message {
	mi := &file_dockerLogs_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DockerLogEntry.ProtoReflect.Descriptor instead.
func (*DockerLogEntry) Descriptor() ([]byte, []int) {
	return file_dockerLogs_proto_rawDescGZIP(), []int{1}
}

func (x *DockerLogEntry) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DockerLogEntry) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

var File_dockerLogs_proto protoreflect.FileDescriptor

const file_dockerLogs_proto_rawDesc = "" +
	"\n" +
	"\x10dockerLogs.proto\x12\x04logs\"5\n" +
	"\x10DockerLogRequest\x12!\n" +
	"\fcontainer_id\x18\x01 \x01(\tR\vcontainerId\"H\n" +
	"\x0eDockerLogEntry\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\x12\x1c\n" +
	"\ttimestamp\x18\x02 \x01(\tR\ttimestamp2V\n" +
	"\x10DockerLogService\x12B\n" +
	"\x10StreamDockerLogs\x12\x16.logs.DockerLogRequest\x1a\x14.logs.DockerLogEntry0\x01B\x19Z\x17./dockerLogs;dockerLogsb\x06proto3"

var (
	file_dockerLogs_proto_rawDescOnce sync.Once
	file_dockerLogs_proto_rawDescData []byte
)

func file_dockerLogs_proto_rawDescGZIP() []byte {
	file_dockerLogs_proto_rawDescOnce.Do(func() {
		file_dockerLogs_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_dockerLogs_proto_rawDesc), len(file_dockerLogs_proto_rawDesc)))
	})
	return file_dockerLogs_proto_rawDescData
}

var file_dockerLogs_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_dockerLogs_proto_goTypes = []any{
	(*DockerLogRequest)(nil), // 0: logs.DockerLogRequest
	(*DockerLogEntry)(nil),   // 1: logs.DockerLogEntry
}
var file_dockerLogs_proto_depIdxs = []int32{
	0, // 0: logs.DockerLogService.StreamDockerLogs:input_type -> logs.DockerLogRequest
	1, // 1: logs.DockerLogService.StreamDockerLogs:output_type -> logs.DockerLogEntry
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_dockerLogs_proto_init() }
func file_dockerLogs_proto_init() {
	if File_dockerLogs_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_dockerLogs_proto_rawDesc), len(file_dockerLogs_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_dockerLogs_proto_goTypes,
		DependencyIndexes: file_dockerLogs_proto_depIdxs,
		MessageInfos:      file_dockerLogs_proto_msgTypes,
	}.Build()
	File_dockerLogs_proto = out.File
	file_dockerLogs_proto_goTypes = nil
	file_dockerLogs_proto_depIdxs = nil
}
