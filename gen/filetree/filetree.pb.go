// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.19.6
// source: filetree.proto

package filetree

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BackendType int32

const (
	BackendType_UNSPECIFIED BackendType = 0
	BackendType_NODEJS      BackendType = 1
	BackendType_FLASK       BackendType = 2
	BackendType_JAVA        BackendType = 3
	BackendType_RUBY        BackendType = 4
)

// Enum value maps for BackendType.
var (
	BackendType_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "NODEJS",
		2: "FLASK",
		3: "JAVA",
		4: "RUBY",
	}
	BackendType_value = map[string]int32{
		"UNSPECIFIED": 0,
		"NODEJS":      1,
		"FLASK":       2,
		"JAVA":        3,
		"RUBY":        4,
	}
)

func (x BackendType) Enum() *BackendType {
	p := new(BackendType)
	*p = x
	return p
}

func (x BackendType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BackendType) Descriptor() protoreflect.EnumDescriptor {
	return file_filetree_proto_enumTypes[0].Descriptor()
}

func (BackendType) Type() protoreflect.EnumType {
	return &file_filetree_proto_enumTypes[0]
}

func (x BackendType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BackendType.Descriptor instead.
func (BackendType) EnumDescriptor() ([]byte, []int) {
	return file_filetree_proto_rawDescGZIP(), []int{0}
}

type File struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Content       string                 `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	Id            string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Path          []string               `protobuf:"bytes,4,rep,name=path,proto3" json:"path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *File) Reset() {
	*x = File{}
	mi := &file_filetree_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *File) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*File) ProtoMessage() {}

func (x *File) ProtoReflect() protoreflect.Message {
	mi := &file_filetree_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use File.ProtoReflect.Descriptor instead.
func (*File) Descriptor() ([]byte, []int) {
	return file_filetree_proto_rawDescGZIP(), []int{0}
}

func (x *File) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *File) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *File) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *File) GetPath() []string {
	if x != nil {
		return x.Path
	}
	return nil
}

type Directory struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Path          []string               `protobuf:"bytes,2,rep,name=path,proto3" json:"path,omitempty"`
	Children      []*Child               `protobuf:"bytes,3,rep,name=children,proto3" json:"children,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Directory) Reset() {
	*x = Directory{}
	mi := &file_filetree_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Directory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Directory) ProtoMessage() {}

func (x *Directory) ProtoReflect() protoreflect.Message {
	mi := &file_filetree_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Directory.ProtoReflect.Descriptor instead.
func (*Directory) Descriptor() ([]byte, []int) {
	return file_filetree_proto_rawDescGZIP(), []int{1}
}

func (x *Directory) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Directory) GetPath() []string {
	if x != nil {
		return x.Path
	}
	return nil
}

func (x *Directory) GetChildren() []*Child {
	if x != nil {
		return x.Children
	}
	return nil
}

type Child struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Node:
	//
	//	*Child_File
	//	*Child_Directory
	Node          isChild_Node `protobuf_oneof:"node"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Child) Reset() {
	*x = Child{}
	mi := &file_filetree_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Child) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Child) ProtoMessage() {}

func (x *Child) ProtoReflect() protoreflect.Message {
	mi := &file_filetree_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Child.ProtoReflect.Descriptor instead.
func (*Child) Descriptor() ([]byte, []int) {
	return file_filetree_proto_rawDescGZIP(), []int{2}
}

func (x *Child) GetNode() isChild_Node {
	if x != nil {
		return x.Node
	}
	return nil
}

func (x *Child) GetFile() *File {
	if x != nil {
		if x, ok := x.Node.(*Child_File); ok {
			return x.File
		}
	}
	return nil
}

func (x *Child) GetDirectory() *Directory {
	if x != nil {
		if x, ok := x.Node.(*Child_Directory); ok {
			return x.Directory
		}
	}
	return nil
}

type isChild_Node interface {
	isChild_Node()
}

type Child_File struct {
	File *File `protobuf:"bytes,1,opt,name=file,proto3,oneof"`
}

type Child_Directory struct {
	Directory *Directory `protobuf:"bytes,2,opt,name=directory,proto3,oneof"`
}

func (*Child_File) isChild_Node() {}

func (*Child_Directory) isChild_Node() {}

type UploadRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Root          *Directory             `protobuf:"bytes,1,opt,name=root,proto3" json:"root,omitempty"`
	ProjectType   BackendType            `protobuf:"varint,2,opt,name=projectType,proto3,enum=filetree.BackendType" json:"projectType,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadRequest) Reset() {
	*x = UploadRequest{}
	mi := &file_filetree_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadRequest) ProtoMessage() {}

func (x *UploadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_filetree_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadRequest.ProtoReflect.Descriptor instead.
func (*UploadRequest) Descriptor() ([]byte, []int) {
	return file_filetree_proto_rawDescGZIP(), []int{3}
}

func (x *UploadRequest) GetRoot() *Directory {
	if x != nil {
		return x.Root
	}
	return nil
}

func (x *UploadRequest) GetProjectType() BackendType {
	if x != nil {
		return x.ProjectType
	}
	return BackendType_UNSPECIFIED
}

type UploadResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Url           string                 `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadResponse) Reset() {
	*x = UploadResponse{}
	mi := &file_filetree_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadResponse) ProtoMessage() {}

func (x *UploadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_filetree_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadResponse.ProtoReflect.Descriptor instead.
func (*UploadResponse) Descriptor() ([]byte, []int) {
	return file_filetree_proto_rawDescGZIP(), []int{4}
}

func (x *UploadResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *UploadResponse) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

var File_filetree_proto protoreflect.FileDescriptor

const file_filetree_proto_rawDesc = "" +
	"\n" +
	"\x0efiletree.proto\x12\bfiletree\"X\n" +
	"\x04File\x12\x18\n" +
	"\acontent\x18\x01 \x01(\tR\acontent\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12\x12\n" +
	"\x04path\x18\x04 \x03(\tR\x04path\"`\n" +
	"\tDirectory\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04path\x18\x02 \x03(\tR\x04path\x12+\n" +
	"\bchildren\x18\x03 \x03(\v2\x0f.filetree.ChildR\bchildren\"j\n" +
	"\x05Child\x12$\n" +
	"\x04file\x18\x01 \x01(\v2\x0e.filetree.FileH\x00R\x04file\x123\n" +
	"\tdirectory\x18\x02 \x01(\v2\x13.filetree.DirectoryH\x00R\tdirectoryB\x06\n" +
	"\x04node\"q\n" +
	"\rUploadRequest\x12'\n" +
	"\x04root\x18\x01 \x01(\v2\x13.filetree.DirectoryR\x04root\x127\n" +
	"\vprojectType\x18\x02 \x01(\x0e2\x15.filetree.BackendTypeR\vprojectType\":\n" +
	"\x0eUploadResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\x12\x10\n" +
	"\x03url\x18\x02 \x01(\tR\x03url*I\n" +
	"\vBackendType\x12\x0f\n" +
	"\vUNSPECIFIED\x10\x00\x12\n" +
	"\n" +
	"\x06NODEJS\x10\x01\x12\t\n" +
	"\x05FLASK\x10\x02\x12\b\n" +
	"\x04JAVA\x10\x03\x12\b\n" +
	"\x04RUBY\x10\x042L\n" +
	"\vFileService\x12=\n" +
	"\x06Upload\x12\x17.filetree.UploadRequest\x1a\x18.filetree.UploadResponse0\x01B\x15Z\x13./filetree;filetreeb\x06proto3"

var (
	file_filetree_proto_rawDescOnce sync.Once
	file_filetree_proto_rawDescData []byte
)

func file_filetree_proto_rawDescGZIP() []byte {
	file_filetree_proto_rawDescOnce.Do(func() {
		file_filetree_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_filetree_proto_rawDesc), len(file_filetree_proto_rawDesc)))
	})
	return file_filetree_proto_rawDescData
}

var file_filetree_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_filetree_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_filetree_proto_goTypes = []any{
	(BackendType)(0),       // 0: filetree.BackendType
	(*File)(nil),           // 1: filetree.File
	(*Directory)(nil),      // 2: filetree.Directory
	(*Child)(nil),          // 3: filetree.Child
	(*UploadRequest)(nil),  // 4: filetree.UploadRequest
	(*UploadResponse)(nil), // 5: filetree.UploadResponse
}
var file_filetree_proto_depIdxs = []int32{
	3, // 0: filetree.Directory.children:type_name -> filetree.Child
	1, // 1: filetree.Child.file:type_name -> filetree.File
	2, // 2: filetree.Child.directory:type_name -> filetree.Directory
	2, // 3: filetree.UploadRequest.root:type_name -> filetree.Directory
	0, // 4: filetree.UploadRequest.projectType:type_name -> filetree.BackendType
	4, // 5: filetree.FileService.Upload:input_type -> filetree.UploadRequest
	5, // 6: filetree.FileService.Upload:output_type -> filetree.UploadResponse
	6, // [6:7] is the sub-list for method output_type
	5, // [5:6] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_filetree_proto_init() }
func file_filetree_proto_init() {
	if File_filetree_proto != nil {
		return
	}
	file_filetree_proto_msgTypes[2].OneofWrappers = []any{
		(*Child_File)(nil),
		(*Child_Directory)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_filetree_proto_rawDesc), len(file_filetree_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_filetree_proto_goTypes,
		DependencyIndexes: file_filetree_proto_depIdxs,
		EnumInfos:         file_filetree_proto_enumTypes,
		MessageInfos:      file_filetree_proto_msgTypes,
	}.Build()
	File_filetree_proto = out.File
	file_filetree_proto_goTypes = nil
	file_filetree_proto_depIdxs = nil
}
